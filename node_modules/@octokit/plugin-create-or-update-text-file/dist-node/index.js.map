{"version":3,"file":"index.js","sources":["../dist-src/utils.js","../dist-src/get-file-content.js","../dist-src/compose-create-or-update-text-file.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["/* istanbul ignore file */\n// universal implementation of nodeUtf8ToBase64/nodeBase64ToUtf8 methods for browsers, Node, and Deno.\n//\n// - good docs on base64\n//   https://developer.mozilla.org/en-US/docs/Glossary/Base64\n// - great insights on why escape/unescape is needed\n//   https://stackoverflow.com/questions/30631927/converting-to-base64-in-javascript-without-deprecated-escape-call\n//\n// Known problem with atob/btoa:\n// https://github.com/octokit/plugin-create-or-update-text-file.js/issues/15\nconst isNode = globalThis.process &&\n    globalThis.process.release &&\n    globalThis.process.release.name;\nfunction nodeUtf8ToBase64(data) {\n    return Buffer.from(data, \"utf-8\").toString(\"base64\");\n}\nfunction nodeBase64ToUtf8(data) {\n    return Buffer.from(data, \"base64\").toString(\"utf-8\");\n}\n// browserUtf8ToBase64 & browserBase64ToUtf8\n// (c) Brandon Rylow - CC BY-SA 4.0\n// https://stackoverflow.com/a/30106551/206879\nfunction browserUtf8ToBase64(data) {\n    // first we use encodeURIComponent to get percent-encoded UTF-8,\n    // then we convert the percent encodings into raw bytes which\n    // can be fed into btoa.\n    return btoa(encodeURIComponent(data).replace(/%([0-9A-F]{2})/g, function toSolidBytes(_match, p1) {\n        // @ts-expect-error - we know what we are doing here\n        return String.fromCharCode(\"0x\" + p1);\n    }));\n}\nfunction browserBase64ToUtf8(data) {\n    // Going backwards: from bytestream, to percent-encoding, to original string.\n    return decodeURIComponent(atob(data)\n        .split(\"\")\n        .map(function (c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n    })\n        .join(\"\"));\n}\nexport const utf8ToBase64 = isNode ? nodeUtf8ToBase64 : browserUtf8ToBase64;\nexport const base64ToUtf8 = isNode ? nodeBase64ToUtf8 : browserBase64ToUtf8;\n","import { RequestError } from \"@octokit/request-error\";\nimport { base64ToUtf8 } from \"./utils\";\n/**\n * Normalizes the retrival of a repository file content.\n *\n * The \"Get repository content\" API can respond in 4 different ways depending\n * on what exists at the given path\n *\n * - An array of folder item objects\n * - An object with type = symlink\n * - An object with type = submodule\n * - An object with type = file\n *\n * We are only interested in the last type, and throw errors in all other cases\n *\n * @see https://docs.github.com/en/rest/reference/repos#get-repository-content\n * @param octokit Octokit instance\n * @param options\n */\nexport async function getFileContents(octokit, options) {\n    const route = \"GET /repos/{owner}/{repo}/contents/{path}\";\n    const requestOptions = octokit.request.endpoint(route, options);\n    const { data } = await octokit\n        .request(route, options)\n        .catch((error) => {\n        /* istanbul ignore if */\n        if (error.status !== 404)\n            throw error;\n        return {\n            data: {\n                content: null,\n                type: \"\",\n                sha: \"\",\n            },\n        };\n    });\n    if (Array.isArray(data)) {\n        throw new RequestError(`[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is a directory`, 403, {\n            request: requestOptions,\n        });\n    }\n    if (!(\"sha\" in data && \"content\" in data)) {\n        throw new RequestError(`[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is not a file, but a ${data.type}`, 403, {\n            request: requestOptions,\n        });\n    }\n    if (data.content === null) {\n        return {\n            content: null,\n        };\n    }\n    try {\n        return {\n            content: base64ToUtf8(data.content),\n            sha: data.sha,\n        };\n    }\n    catch (error) {\n        /* istanbul ignore next */\n        if (error.message !== \"URI malformed\")\n            throw error;\n        /* istanbul ignore next error is only thrown in browsers, not node. */\n        throw new RequestError(`[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is a binary file, only text files are supported`, 403, {\n            request: requestOptions,\n        });\n    }\n}\n","import { getFileContents } from \"./get-file-content\";\nimport { utf8ToBase64 } from \"./utils\";\n/**\n *\n * @param octokit Octokit instance\n * @param options\n */\nexport async function composeCreateOrUpdateTextFile(octokit, options) {\n    const { content: contentOrFn, message, committer, author, ...getOptions } = options;\n    const currentFile = await getFileContents(octokit, getOptions);\n    // normalize content\n    const content = typeof contentOrFn === \"function\"\n        ? await contentOrFn({\n            exists: currentFile.content !== null,\n            content: currentFile.content,\n        })\n        : contentOrFn;\n    // do nothing if there are no changes\n    if (content === currentFile.content) {\n        return {\n            updated: false,\n            deleted: false,\n            data: {},\n            headers: {},\n        };\n    }\n    // delete file if it exists and new content is `null`\n    if (currentFile.sha && content === null) {\n        // https://docs.github.com/en/rest/reference/repos#delete-a-file\n        const response = await octokit.request(\"DELETE /repos/{owner}/{repo}/contents/{path}\", {\n            ...getOptions,\n            message,\n            sha: currentFile.sha,\n        });\n        return {\n            ...response,\n            updated: true,\n            deleted: true,\n        };\n    }\n    // update file to new content\n    // https://docs.github.com/en/rest/reference/repos#create-or-update-file-contents\n    const response = await octokit.request(\"PUT /repos/{owner}/{repo}/contents/{path}\", {\n        ...getOptions,\n        message,\n        ...currentFile,\n        content: utf8ToBase64(content),\n    });\n    return {\n        ...response,\n        updated: true,\n        deleted: false,\n        content: content,\n    };\n}\n","export const VERSION = \"1.0.3\";\n","import { composeCreateOrUpdateTextFile } from \"./compose-create-or-update-text-file\";\nimport { VERSION } from \"./version\";\nexport { composeCreateOrUpdateTextFile } from \"./compose-create-or-update-text-file\";\n/**\n * @param octokit Octokit instance\n */\nexport function createOrUpdateTextFile(octokit) {\n    return {\n        createOrUpdateTextFile(options) {\n            return composeCreateOrUpdateTextFile(octokit, options);\n        },\n    };\n}\ncreateOrUpdateTextFile.VERSION = VERSION;\n"],"names":["isNode","globalThis","process","release","name","nodeUtf8ToBase64","data","Buffer","from","toString","nodeBase64ToUtf8","browserUtf8ToBase64","btoa","encodeURIComponent","replace","toSolidBytes","_match","p1","String","fromCharCode","browserBase64ToUtf8","decodeURIComponent","atob","split","map","c","charCodeAt","slice","join","utf8ToBase64","base64ToUtf8","getFileContents","octokit","options","route","requestOptions","request","endpoint","catch","error","status","content","type","sha","Array","isArray","RequestError","url","message","composeCreateOrUpdateTextFile","contentOrFn","committer","author","getOptions","currentFile","exists","updated","deleted","headers","response","VERSION","createOrUpdateTextFile"],"mappings":"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"}